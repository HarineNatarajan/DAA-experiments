import java.util.Scanner;

public class NQueens {
    private static int N; // number of queens

    private static boolean isSafe(int[][] board, int row, int col) {
        // Check left side of this row
        for (int i = 0; i < col; i++) {
            if (board[row][i] == 1) {
                return false;
            }
        }

        // Check upper diagonal on left side
        for (int i = row, j = col; i >= 0 && j >= 0; i--, j--) {
            if (board[i][j] == 1) {
                return false;
            }
        }

        // Check lower diagonal on left side
        for (int i = row, j = col; j >= 0 && i < N; i++, j--) {
            if (board[i][j] == 1) {
                return false;
            }
        }

        return true;
    }

    private static boolean solveNQueensUtil(int[][] board, int col) {
        // All queens are placed
        if (col >= N) {
            printSolution(board);
            return true;
        }

        // Consider this column and try placing this queen in all rows one by one
        boolean res = false;
        for (int i = 0; i < N; i++) {
            if (isSafe(board, i, col)) {
                board[i][col] = 1; // Place queen in this cell
                // Recur to place rest of the queens
                res = solveNQueensUtil(board, col + 1) || res;
                // If placing queen in board[i][col] doesn't lead to a solution,
                // then remove queen from board[i][col]
                board[i][col] = 0; // BACKTRACK
            }
        }

        // If queen can't be placed in any row in this column col, then return false
        return res;
    }

    private static void printSolution(int[][] board) {
        // Print the board
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                System.out.print(board[i][j] + " ");
            }
            System.out.println();
        }
        System.out.println();
    }

    public static void solveNQueens() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter the number of queens (N): ");
        N = scanner.nextInt();
        scanner.close();

        int[][] board = new int[N][N];

        if (!solveNQueensUtil(board, 0)) {
            System.out.println("No solution exists.");
        }
    }

    public static void main(String[] args) {
        solveNQueens();
    }
}
